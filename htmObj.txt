Anchor Object
The Anchor object represents an HTML <a> element.

Access an Anchor Object
You can access an <a> element by using getElementById():

Example
const element = document.getElementById("myAnchor");
Create an Anchor Object
You can create an <a> element by using the document.createElement() method:

Example
const element = document.createElement("a");
Anchor Object Properties
Property	Description
charset	Not supported in HTML5.
Sets or returns the value of the charset attribute of a link
download	Sets or returns the value of the download attribute of a link
hash	Sets or returns the anchor part of the href attribute value
host	Sets or returns the hostname and port part of the href attribute value
hostname	Sets or returns the hostname part of the href attribute value
href	Sets or returns the value of the href attribute of a link
hreflang	Sets or returns the value of the hreflang attribute of a link
origin	Returns the protocol, hostname and port part of the href attribute value
name	Not supported in HTML5. Use element.id instead.
Sets or returns the value of the name attribute of a link
password	Sets or returns the password part of the href attribute value
pathname	Sets or returns the pathname part of the href attribute value
port	Sets or returns the port part of the href attribute value
protocol	Sets or returns the protocol part of the href attribute value
rel	Sets or returns the value of the rel attribute of a link
rev	Not supported in HTML5.
Sets or returns the value of the rev attribute of a link
search	Sets or returns the querystring part of the href attribute value
target	Sets or returns the value of the target attribute of a link
text	Sets or returns the text content of a link
type	Sets or returns the value of the type attribute of a link
username	Sets or returns the username part of the href attribute value


Area Object
The Area object represents an HTML <area> element.

Access an Area Object
You can access an <area> element by using getElementById():

Example
var x = document.getElementById("myArea");
Create an Area Object
You can create an <area> element by using the document.createElement() method:

Example
var x = document.createElement("AREA");
Area Object Properties
Property	Description
alt	Sets or returns the value of the alt attribute of an area
coords	Sets or returns the value of the coords attribute of an area
hash	Sets or returns the anchor part of the href attribute value
host	Sets or returns the hostname and port part of the href attribute value
hostname	Sets or returns the hostname part of the href attribute value
href	Sets or returns the value of the href attribute of an area
noHref	Not supported in HTML5.
Sets or returns the value of the nohref attribute of an area
origin	Returns the protocol, hostname and port part of the href attribute value
password	Sets or returns the password part of the href attribute value
pathname	Sets or returns the pathname part of the href attribute value
port	Sets or returns the port part of the href attribute value
protocol	Sets or returns the protocol part of the href attribute value
search	Sets or returns the querystring part of the href attribute value
shape	Sets or returns the value of the shape attribute of an area
target	Sets or returns the value of the target attribute of an area
username	Sets or returns the username part of the href attribute value

Audio Object
The Audio object represents an HTML <audio> element.

Access an Audio Object
You can access an <audio> element by using getElementById():

Example
var x = document.getElementById("myAudio");
Create an Audio Object
You can create an <audio> element by using the document.createElement() method:

Example
var x = document.createElement("AUDIO");
Audio Object Properties
Property	Description
audioTracks	Returns an AudioTrackList object representing available audio tracks
autoplay	Sets or returns whether the audio should start playing as soon as it is ready
buffered	Returns a TimeRanges object representing the buffered parts of an audio
controller	Returns the MediaController object representing the current media controller of an audio
controls	Sets or returns whether an audio should have controls displayed (play/pause etc)
crossOrigin	Sets or returns the CORS settings of an audio
currentSrc	Returns the URL of the current audio
currentTime	Sets or returns the current playback position in an audio (in seconds)
defaultMuted	Sets or returns whether the audio should be muted by default
defaultPlaybackRate	Sets or returns whether the default playback speed of the audio
duration	Returns the length of an audio(in seconds)
ended	Returns whether the playback of the audio has ended
error	Returns a MediaError object representing the error state of the audio
loop	Sets or returns whether the audio should start playing over again, every time it is finished
mediaGroup	Sets or returns the name of the media group the audio(s) is a part of
muted	Sets or returns whether the sound should be turned off
networkState	Returns the current network state of an audio
paused	Sets or returns whether an audio is paused
playbackRate	Sets or returns the speed of the audio playback
played	Returns a TimeRanges object representing the played parts of the audio
preload	Sets or returns the value of the preload attribute of an audio
readyState	Returns the current ready state of an audio
seekable	Returns a TimeRanges object representing the seekable parts of an audio
seeking	Returns whether the user is currently seeking in the audio
src	Sets or returns the value of the src attribute of an audio
textTracks	Returns a TextTrackList object representing the available text tracks
volume	Sets or returns the audio volume of an audio
Audio Object Methods
Method	Description
addTextTrack()	Adds a new text track to the audio
canPlayType()	Checks whether the browser can play the specified audio type
fastSeek()	Seeks to a specified time in the audio player
getStartDate()	Returns a new Date object, representing the current timeline offset
load()	Re-loads the audio element
play()	Starts playing the audio
pause()	Pauses the currently playing audio
Standard Properties and Events
The Audio object also supports the standard properties and events.

Related Pages
HTML tutorial: HTML5 audio

HTML reference: HTML <audio> tag

Button Object Properties
Property	Description
autofocus	Sets or returns whether a button should automatically get focus when the page loads, or not
disabled	Sets or returns whether a button is disabled, or not
form	Returns a reference to the form that contains a button
formAction	Sets or returns the value of the formaction attribute of a button
formEnctype	Sets or returns the value of the formenctype attribute of a button
formMethod	Sets or returns the value of the formmethod attribute of a button
formNoValidate	Sets or returns whether the form-data should be validated or not, on submission
formTarget	Sets or returns the value of the formtarget attribute of a button
name	Sets or returns the value of the name attribute of a button
type	Sets or returns the type of a button
value	Sets or returns the value of the value attribute of a button

Canvas Object
The HTML5 <canvas> tag is used to draw graphics, on the fly, with JavaScript.

Access a Canvas Object
You can access a <canvas> element by using getElementById():

Example
var x = document.getElementById("myCanvas");
Create a Canvas Object
You can create a <canvas> element by using the document.createElement() method:

Example
var x = document.createElement("CANVAS");
Note: The <canvas> element has no drawing abilities of its own (it is only a container for graphics) - you must use a script to actually draw the graphics.

The getContext() method returns an object that provides methods and properties for drawing on the canvas.

This reference will cover the properties and methods of the getContext("2d") object, which can be used to draw text, lines, boxes, circles, and more - on the canvas.

Colors, Styles, and Shadows
Property	Description
fillStyle	Sets or returns the color, gradient, or pattern used to fill the drawing
strokeStyle	Sets or returns the color, gradient, or pattern used for strokes
shadowColor	Sets or returns the color to use for shadows
shadowBlur	Sets or returns the blur level for shadows
shadowOffsetX	Sets or returns the horizontal distance of the shadow from the shape
shadowOffsetY	Sets or returns the vertical distance of the shadow from the shape
Method	Description
createLinearGradient()	Creates a linear gradient (to use on canvas content)
createPattern()	Repeats a specified element in the specified direction
createRadialGradient()	Creates a radial/circular gradient (to use on canvas content)
addColorStop()	Specifies the colors and stop positions in a gradient object
Line Styles
Property	Description
lineCap	Sets or returns the style of the end caps for a line
lineJoin	Sets or returns the type of corner created, when two lines meet
lineWidth	Sets or returns the current line width
miterLimit	Sets or returns the maximum miter length
Rectangles
Method	Description
rect()	Creates a rectangle
fillRect()	Draws a "filled" rectangle
strokeRect()	Draws a rectangle (no fill)
clearRect()	Clears the specified pixels within a given rectangle
Paths
Method	Description
fill()	Fills the current drawing (path)
stroke()	Actually draws the path you have defined
beginPath()	Begins a path, or resets the current path
moveTo()	Moves the path to the specified point in the canvas, without creating a line
closePath()	Creates a path from the current point back to the starting point
lineTo()	Adds a new point and creates a line from that point to the last specified point in the canvas
clip()	Clips a region of any shape and size from the original canvas
quadraticCurveTo()	Creates a quadratic Bézier curve
bezierCurveTo()	Creates a cubic Bézier curve
arc()	Creates an arc/curve (used to create circles, or parts of circles)
arcTo()	Creates an arc/curve between two tangents
isPointInPath()	Returns true if the specified point is in the current path, otherwise false
Transformations
Method	Description
scale()	Scales the current drawing bigger or smaller
rotate()	Rotates the current drawing
translate()	Remaps the (0,0) position on the canvas
transform()	Replaces the current transformation matrix for the drawing
setTransform()	Resets the current transform to the identity matrix. Then runs transform()
Text
Property	Description
font	Sets or returns the current font properties for text content
textAlign	Sets or returns the current alignment for text content
textBaseline	Sets or returns the current text baseline used when drawing text
Method	Description
fillText()	Draws "filled" text on the canvas
strokeText()	Draws text on the canvas (no fill)
measureText()	Returns an object that contains the width of the specified text
Image Drawing
Method	Description
drawImage()	Draws an image, canvas, or video onto the canvas
Pixel Manipulation
Property	Description
width	Returns the width of an ImageData object
height	Returns the height of an ImageData object
data	Returns an object that contains image data of a specified ImageData object
Method	Description
createImageData()	Creates a new, blank ImageData object
getImageData()	Returns an ImageData object that copies the pixel data for the specified rectangle on a canvas
putImageData()	Puts the image data (from a specified ImageData object) back onto the canvas
Compositing
Property	Description
globalAlpha	Sets or returns the current alpha or transparency value of the drawing
globalCompositeOperation	Sets or returns how a new image are drawn onto an existing image
Other
Method	Description
save()	Saves the state of the current context
restore()	Returns previously saved path state and attributes
createEvent()	 
getContext()	 
toDataURL()	 
